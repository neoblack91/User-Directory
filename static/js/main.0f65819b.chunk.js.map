{"version":3,"sources":["components/Header/Header.js","components/Employees/Employees.js","utils/API.js","App.js","index.js"],"names":["Jumbotron","className","DatatablePage","employeeData","peopleInfo","map","People","image","alt","name","first","last","src","picture","medium","email","phone","peopleHere","length","console","log","data","columns","label","field","sort","width","rows","striped","bordered","small","App","useState","people","setPeople","useEffect","axios","get","then","results","ReactDOM","render","document","getElementById"],"mappings":"gLAUeA,MAPf,WACE,OACE,qBAAKC,UAAU,YAAf,SACE,kD,iCCuFSC,EAxDO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjBC,EAAaD,EAAaE,KAAI,SAACC,GACnC,MAAO,CACLC,MACE,qBACEC,IAAKF,EAAOG,KAAKC,MAAQ,IAAMJ,EAAOG,KAAKE,KAC3CC,IAAKN,EAAOO,QAAQC,SAIxBJ,MAAOJ,EAAOG,KAAKC,MACnBC,KAAML,EAAOG,KAAKE,KAClBI,MAAOT,EAAOS,MACdC,MAAOV,EAAOU,UAGZC,EAAab,EAAWc,OAAS,EACvCC,QAAQC,IAAIjB,GAEZ,IAAMkB,EAAO,CACXC,QAAS,CACP,CACEC,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,OACPC,MAAO,OACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,MAGXC,KAAMV,GAAcb,GAEtB,OAAO,cAAC,IAAD,CAAcwB,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACT,KAAMA,KCpErCU,MAhBf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,KAQb,OANAC,qBAAU,WACRC,IAAMC,IAAI,0CAA0CC,MAAK,SAACC,GACxDL,EAAUK,EAAQlB,KAAKkB,cAExB,IAGD,qBAAKtC,UAAU,YAAf,SAGE,cAAC,EAAD,CAAeE,aAAc8B,OCKpBF,MAjBf,WAQE,OACE,sBAAK9B,UAAU,YAAf,UACE,cAAC,EAAD,IAGA,cAAC,EAAD,CAAKC,eAAa,Q,OCfxBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.0f65819b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1>Employee List</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\n// function employedPeople(props) {\r\n//   return (\r\n//     <table className=\"table\">\r\n//       <thead>\r\n//         <tr>\r\n//           <th scope=\"col\">id</th>\r\n//           <th scope=\"col\">First</th>\r\n//           <th scope=\"col\">Last</th>\r\n//           <th scope=\"col\">Phone Number</th>\r\n//           <th scope=\"col\">email</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {props.employeeData.map(({ picture, name, phone, email }) => {\r\n//           // console.log(picture, name, phone, email);\r\n//           return (\r\n//             <tr>\r\n//               <img alt={name.first + \",\" + name.last} src={picture.medium} />\r\n\r\n//               <td>{name.first}</td>\r\n//               <td>{name.last}</td>\r\n//               <td>{phone}</td>\r\n//               <td>{email}</td>\r\n//             </tr>\r\n//           );\r\n//         })}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// export default employedPeople;\r\nimport { MDBDataTable } from \"mdbreact\";\r\n// import axios from \"axios\";\r\n\r\nconst DatatablePage = ({ employeeData }) => {\r\n  const peopleInfo = employeeData.map((People) => {\r\n    return {\r\n      image: (\r\n        <img\r\n          alt={People.name.first + \",\" + People.name.last}\r\n          src={People.picture.medium}\r\n        />\r\n      ),\r\n\r\n      first: People.name.first,\r\n      last: People.name.last,\r\n      email: People.email,\r\n      phone: People.phone,\r\n    };\r\n  });\r\n  const peopleHere = peopleInfo.length > 0;\r\n  console.log(employeeData);\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Image\",\r\n        field: \"image\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"First\",\r\n        field: \"first\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Last\",\r\n        field: \"last\",\r\n        sort: \"asc\",\r\n        width: 270,\r\n      },\r\n      {\r\n        label: \"Phone\",\r\n        field: \"phone\",\r\n        sort: \"asc\",\r\n        width: 200,\r\n      },\r\n      {\r\n        label: \"Email\",\r\n        field: \"email\",\r\n        sort: \"asc\",\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: peopleHere && peopleInfo,\r\n  };\r\n  return <MDBDataTable striped bordered small data={data} />;\r\n};\r\nexport default DatatablePage;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import Jumbotron from \"./components/Header/Header\";\r\n// import SearchForm from \"../components/Search/Search\";\r\n// import Employees from \"../components/Employees/Employees\";\r\nimport axios from \"axios\";\r\nimport DatatablePage from \"../components/Employees/Employees\";\r\n\r\nfunction App() {\r\n  const [people, setPeople] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(\"https://randomuser.me/api/?results=200\").then((results) => {\r\n      setPeople(results.data.results);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Jumbotron /> */}\r\n      {/* <SearchForm searchInput={peopleInput} /> */}\r\n      <DatatablePage employeeData={people} />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport Jumbotron from \"./components/Header/Header\";\n// import SearchForm from \"./components/Search/Search\";\n// import Employees from \"./components/Employees/Employees\";\n\nimport Api from \"./utils/API\";\n\nfunction App() {\n  // const [input, setInput] = useState(\"\");\n\n  // const handleInputChange = (event) => {\n  //   setInput(event.target.value);\n  //   console.log(event.target.value);\n  // };\n\n  return (\n    <div className=\"container\">\n      <Jumbotron />\n      {/* <SearchForm handleInputChange={handleInputChange} /> */}\n      {/* <Api employeeData={input} /> */}\n      <Api DatatablePage />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}